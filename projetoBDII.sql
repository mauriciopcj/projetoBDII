CREATE TABLE Grupo (
	nome varchar(50) NOT NULL,
	matricula char(11) NOT NULL
);

INSERT INTO Grupo VALUES ('Mauricio Pereira', '20181370027');
INSERT INTO Grupo VALUES ('Renato Borges', '20171370013');
INSERT INTO Grupo VALUES ('Romero Reis', '20181370009');

--DROP TABLE Grupo;

CREATE TABLE Conta (
	numConta char(11) NOT NULL CHECK(char_length(numConta)=11),
	dig char(1) NOT NULL CHECK(dig LIKE '([0-9]|&)'),
	nome varchar(50) NOT NULL,
	tipo char(1) NOT NULL CHECK(tipo LIKE '(A|S)'),
	ativa char(1) NOT NULL CHECK(ativa LIKE '(S|N)'),
	CONSTRAINT PK_conta PRIMARY KEY (numConta)
);

--DROP TABLE Conta;

CREATE TABLE Saldos (
	numConta char(11) NOT NULL,
	ano int NOT NULL,
	saldo numeric(9,2) NOT NULL,
	CONSTRAINT PK_saldos PRIMARY KEY (numConta, ano),
	CONSTRAINT FK_saldos_conta FOREIGN KEY (numConta) REFERENCES Conta (numConta)
);

--DROP TABLE Saldos;

CREATE TABLE DebCred (
	numConta char(11) NOT NULL,
	mesAno char(6) NOT NULL,
	credito numeric(11,2) NOT NULL,
	debito numeric(11,2) NOT NULL,
	CONSTRAINT PK_debcred PRIMARY KEY (numConta, mesAno),
	CONSTRAINT FK_debcred_conta FOREIGN KEY (numConta) REFERENCES Conta (numConta)
);

--DROP TABLE DebCred;

CREATE TABLE MovDebCred (
	numConta char(11) NOT NULL,
	nsu int NOT NULL GENERATED BY DEFAULT AS IDENTITY, 
	dig char(1) NOT NULL,
	data timestamp NOT NULL,
	debCred char(1) NOT NULL CHECK(debCred LIKE '(D|C)'),
	valor numeric(11,2) NOT NULL,
	CONSTRAINT PK_movdebcred PRIMARY KEY (numConta, nsu)
);

--DROP TABLE MovDebCred;

/* STORED FUNCTION - 7.4.a */

CREATE OR REPLACE FUNCTION verifica_digito (numero varchar)
RETURNS varchar
AS $$
DECLARE
	mascara varchar := '27654327654';
	soma integer := 0;
	resto integer;
	digito varchar;
BEGIN
	FOR i IN 1..11 LOOP
		soma = soma + CAST(substring(numero from i for 1) AS integer) * CAST(substring(mascara from i for 1) AS integer);
	END LOOP;
	resto := soma % 11;
	digito := 11 - resto;
	IF digito = '10' THEN
		digito := '0';
	ELSIF digito = '11' THEN
		digito := '&';
	END IF;
	RETURN digito;
END; 
$$ LANGUAGE 'plpgsql';

-- SELECT verifica_digito('11010100100');
-- SELECT verifica_digito('11010100200');
-- SELECT verifica_digito('11010100300');